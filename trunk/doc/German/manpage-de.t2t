TXT2TAGS

Aug, 2010

%!target: man
%!encoding: UTF-8

%!postproc(man): ' \(#\w+\)' ''

%!options(html): --mask-email --toc
%!postproc(html): <HEAD> '<HEAD>\n<STYLE>body{margin:3em;} pre{background:#ffc;}</STYLE>'

%!style(xhtmls): media\themes\Clean\style.css
%!nested(tex): --docclass {article}

= NAME =[name]

txt2tags - Textformatierungs- und -konvertierungswerkzeug

= SYNOPSIS =[synopsis]

**txt2tags** [//Optionen//] [//DATEI//...]

= BESCHREIBUNG =[beschreibung]

**txt2tags** liest einen Text mit minimalem Markup und konvertiert ihn zu:
//ASCII Art//,
//AsciiDoc//,
//Creole//,
//DocBook//,
//DokuWiki//,
//Google Code Wiki//,
//HTML//,
//LaTeX//,
//Lout//,
//MagicPoint//,
//Man page//,
//MoinMoin//,
//PageMaker//,
//Plain Text//,
//PmWiki//,
//SGML//,
//Wikipedia// und
//XHTML//.
% TRANSLATOR: please keep the alphabetical order of this list.

**txt2tags** liest eine Textdatei mit minimalem Markup und wandelt ihn um in:
ASCII-Art, AsciiDoc, Creole, DocBook, DokuWiki, Google Code Wiki,
HTML, LaTeX, Lout, MagicPoint, Manpage, MoinMoin, PageMaker,
Plain Text, PmWiki, SGML, Wikipedia und XHTML.

Diese Manpage wurde von txt2tags aus einer einfachen Textdatei erstellt.
Der gleiche Textdatei wird auch für die Online-Version dieses Handbuchs in HTML umgewandelt.
Eine Quelle, MULTI-Ziele - http://txt2tags.org

EIN Quellformat, VIELE Zielformate - http://txt2tags.org


= MARKUP =[markup]

```
Headers           Die ersten 3 Zeilen der Quelldatei
Titel             = Wörter =
Nummerierter Titel + Wörter +
Kommentar         % Kommentare
Trennungslinie    -----------------------...
Dicke Linie       =======================...
Bild              [Dateiname.jpg]
Link              [Marke url]

Fett              **Wörter**
Italic            //Wörter//
Understrichen     __Wörter__
Durchgestrichen   --Wörter--
Monospaced        ``Wörter``
Raw               ""Wörter""
Tagged            ''Wörter''

Absatz            Wörter
Zitat             <TAB>Wörter
Liste             - Wörter
Numerierte Liste  + Wörter
Definitionsliste  : Wörter
Tabelle           | Zelle 1 | Zelle 2 | Zelle 3 ...

Verbatim-Zeile    ``` Wörter
Raw-Zeile         """ Wörter
Tagged-Zeile      ''' Wörter

Verbatim-Block    ```
                  Zeilen
                  ```
Raw-Block         """
                  Zeilen
                  """
Tagged-Block      '''
                  Zeilen
                  '''
```

= OPTIONEN =[optionen]

:     **--art-chars**=//MUSTER//
Definiert //MUSTER// als das Muster von Zeichen, die ASCII-Kunst darstellen, in der folgenden Reihenfolge: corner, border, side, bar1, bar2, level2, level3, level4, level5. Der Standardwert für das Zeichenmuster ist +-|-==-^". Diese Option wird nur bei ASCII-Kunst als Zielformat benutzt.

: **-C**, **--config-file**=//DATEI//
Liest die Konfiguration aus einer externen //DATEI//. Die Konfiguration muß im Format //%!keyword:value// stehen. Siehe die Erläuterungen im Abschnitt [EINSTELLUNGEN #einstellungen] .

:     **--css-sugar**
Verbessert den erzeugten HTML/XHTML-Code, wenn CSS-Dateien verwendet werden. Tag-Attribute werden entfernt, Darstellungs-Tags werden vermieden, Überschriften bestehen aus H1, H2 und H3 Tags, neue DIVs werden erzeugt: //#header//, //#body//, //.toc//.

:     **--css-inside**
Fügt den Inhalt einer CSS-Datei innerhalb der HTML/XHTML-Kopfzeilen ein. Verwende`--style``, um eine CSS-Datei anzugeben, die gelesen werden soll.

:     **--dump-config**
Druckt die gefundene Konfiguration und beendet.

:     **--dump-source**
Druckt das Quelldokument erweitert um die Einfügungen (``%!include``).

:     **--encoding**=//CODE//
Informiert über den Zeichensatz (die Dateicodierung), der vom Quelldokument verwendet wird. Beispiele sind UTF-8 und iso-8859-1. Die Codierung wird nicht während der Konvertierung geändert, so dass das Ausgabedokument die gleiche Codierung wie die Quellen erhält.

:     **--gui**
Ruft die grafische Tk-Benutzerschnittstelle auf.

: **-h**, **--help**
Druckt den Hilfetext und beendet.

: **-H**, **--no-headers**
Unterdrückt Kopf- und Fußzeilen in der Ausgabe. Nur der Inhalt (Body) wird gezeigt.

:     **--headers**
Zeigt Kopf- und Fußzeilen in der Ausgabe. Standard ist AN.

:     **--height**=//NUM//
Setzt die Höhe der Ausgabe zu //NUM// Zeilen. Diese Option wird nur benutzt bei ASCII-Kunst als Zielformat, wenn auch ``--slides`` verwendet wird.

: **-i**, **--infile**=//DATEI//
Setzt //DATEI// als Eingabedateiname, das Quelldokument. Verwende '-', um die Quellen von STDIN zu lesen.

:     **--mask-email**
Versteckt E-Mails vor Spamrobotern. Entfernt @ und Punkte. Die Adresse ""foo@bar.com"" wird zu <foo (a) bar com>.

: **-n**, **--enum-title**
Verwendet die automatische Nummerierung für Titelzeilen. Ihnen wird 1, 1.1, 1.1.1, ... vorangestellt.

:     **--no-dump-config**
Beendet die ``--dump-config`` Aktion.

:     **--no-dump-source**
Beendet die ``--dump-source`` Aktion.

:     **--no-encoding**
Löscht die Codierungseinstellung.

:     **--no-enum-title**
Unterdrückt die automatische Nummerierung für Titelzeilen.

:     **--no-infile**
Löscht alle vorigen infile-Deklarationen.

:     **--no-targets**
Beendet die ``--targets`` Aktion.

:     **--no-mask-email**
Unterdrückt die E-Mailmaskierung.

:     **--no-outfile**
Löscht die vorige outfile-Deklaration.

:     **--no-quiet**
Zeigt Meldungen, unterdrückt die ``--quiet`` Option.

:     **--no-rc**
Liest nicht die Benutzerkonfigurationsdatei ~/.txt2tagsrc.

:     **--no-slides**
Schaltet das slides-Feature aus.

:     **--no-style**
Löscht alle Stileinstellungen.

:     **--no-toc**
Entfernt das Inhaltsverzeichnis von der Ausgabe.

:     **--no-toc-only**
Schaltet die ``--toc-only`` Aktion aus.

: **-o**, **--outfile**=//DATEI//
Setzt //DATEI// als Ausgabedateiname. Benutzt '-', um Ergebnisse nach STDOUT zu schicken.

: **-q**, **--quiet**
Stiller Modus. Unterdrückt alle Ausgaben, außer Fehler.

:     **--rc**
Liest die Benutzerkonfigurationsdatei ~/.txt2tagsrc. Standard ist AN.

:     **--slides**
Formatiert die Ausgabe als Präsentation. Diese Option wird nur benutzt bei ASCII-Kunst als Zielformat.

:     **--style**=//DATEI//
Verwendet //DATEI// als Stildatei des Dokuments. Wird benutzt, um CSS-Dateien für HTML/XHTML-Dokumente zu definieren und Pakete für LaTeX. Diese Option kann mehrmals verwendet werden, um mehrere Dateien einzufügen.

: **-t**, **--target**=//TYPE//
Setzt das Format des Ausgabedokuments zu //TYPE//. Einige populäre Typen sind: //html//, //xhtml//, //tex//, //man//, //txt//. Benutze die ``--targets`` Option, um alle verfügbaren Formate zu sehen.

:     **--targets**
Druckt eine Liste aller verfügbaren Zielformate und beendet.

:     **--toc**
Fügt automatisch ein Inhaltsverzeichnis (TOC) in die Ausgabe zwischen Header und Body ein. Die  Position kann mit dem ``%%TOC`` Makro festgelegt werden.

:     **--toc-level**=//NUM//
Setzt die maximale TOC-Tiefe zu //NUM//. Alle Titel tiefer als //NUM// werden nicht ins Inhaltsverzeichnis eingefügt.

:     **--toc-only**
Druckt nur das Inhaltsverzeichnis und beendet.

: **-v**, **--verbose**
Druckt informative Nachrichten während der Konvertierung. Diese Option kann mehrmals benutzt werden, um die Anzahl der angezeigten Nachrichten zu erhöhen.

: **-V**, **--version**
Druckt die Programmversion und beendet.

:     **--width**=//NUM//
Setzt die Ausgabebreite auf //NUM// Spalten. Diese Option wird nur bei ASCII-Kunst als Zielformat verwendet.
:

= QUELLDATEIEN =[quelldateien]

Die Quelldateien werden normalerweise durch die //.t2t// Erweiterung (wie in ``myfile.t2t``) ausgewiesen. In den Quelldateien können drei Bereiche vorkommen :

: **Header** (optional)
Die ersten drei Zeilen der Datei. Lasse die erste Zeile leer, wenn keine Kopfzeilen gebraucht werden. Wird verwendet für Dokumenttitel, Autor, Version und Datumsinformation.

: **Settings** (optional)
Beginnt gleich nach dem Header (vierte oder zweite Zeile) und endet, wo der Body beginnt.
Wird benutzt für Einstellungen im ``%!keyword:value`` Format.

: **Body**
Beginnt an der ersten gültigen Textzeile (nicht Kommentar oder Einstellung) nach dem Headerbereich und geht bis zum Ende des Dokuments. Wird für den Dokumentinhalt benutzt.
:

= EINSTELLUNGEN =[einstellungen]

Mit den Einstellungen kann **txt2tags** angepasst werden, ähnlich den Otionen. Sie können im Quelldokument im Bereich Einstellungen benutzt werden, ``~/.txt2tagsrc`` file, die externe Datei wird mit ``--config-file`` aufgerufen.

: **%!target**
Setzt das Ausgabeformat, wie bei ``--target``. Beispiel:
``` %!target: html

: **%!options(target)**
Setzt die Standardoptionen für jedes Ziel. Du mußt die Optionen Kommandozeilen benutzen. Beispiel:
``` %!options(html): --toc --toc-level 3 --css-sugar

: **%!includeconf**
Füge die Konfigurationen aus einer externen Datei in die aktuelle ein, wie bei ``--config-file``. Beispiel:
``` %!includeconf: myconfig.t2t

: **%!style**
Setzt eine Stildatei für das document, wie bei ``--style``. Kann mehrmals benutzt werden.  Beispiel:
``` %!style: colors.css

: **%!encoding**
Setzt den Zeichensatz, der vom Dokument verwendet wird, wie bei ``--encoding``. Beispiel:
``` %!encoding: UTF-8

: **%!preproc**
Wendet ein Suchen/Ersetzen Filter an, das verwendet wird um den Body vom Quelldokument zu ändern, VOR jedem Parsen durch txt2tags. Die Suche verwendet reguläre Ausdrücke von Python. Beispiel:
``` %!preproc:  "JJS"  "John J. Smith"

: **%!postproc**
Wendet ein Suchen/Ersetzen Filter an, das verwendet wird um das erzeugte Dokument zu ändern, NACH allem Verarbeiten durch txt2tags. Die Suche verwendet reguläre Ausdrücke von Python. Beispiel:
``` %!postproc(html):  "<B>"  "<STRONG>"
:

Wenn das gleiche Schlüsselwort mehr als einmal vorkommt, wird das letzte gefundene benutzt (außer bei: Optionen, preproc und postproc, welche kumulativ arbeiten). Ungültige Schlüsselwörter werden ignoriert. Die Reihenfolge ist: ``~/.txt2tagsrc``, Konfigurationsbereich des Quelldokuments, ``--config-file`` Option.


= COMMANDS =[commands]

Kommandos führen Aufgaben während der Konvertierung aus. Sie müssen in den Body des Quelldokuments geschrieben werden.

: **%!csv: Datei.csv**
Fügt eine externe CSV-Datei als Tabelle ein.

: **%!include: Datei.t2t**
Fügt eine txt2tags-Datei ein.

: **%!include: ""``Datei.txt``""**
Fügt eine Textdatei (verbatim) in das Dokument ein.

: **%!include: ""''Datei.html''""**
Fügt eine bereits getaggte Datei in das Dokument ein.
:

= MAKROS =[makros]

Makros sind handliche Abkürzungen und erlauben es dynamisch Inhalt ins Dokument einzufügen. Sie müssen in den Body des Quelldokuments gestellt werden. Mit Ausnahme von ``%%toc`` können alle Makros mit speziellen Direktiven, wie ``%Y`` and ``%f`` angepaßt werden. Für Details siehe das txt2tags Benutzerhandbuch.

: **""%%date""**
Fügt das aktuelle Datum ein. Das Standardformat ist ``%%date(%Y%m%d)``, was YYYYMMDD ergibt.

: **""%%infile""**
Fügt den Pfad der Quelldatei ein. Das Standardformat ist ``%%infile(%f)``. Nützlich für links in Fußzeilen wie ``[See source %%infile]``.

: **""%%mtime""**
Füge die Änderungszeit der Quelldatei ein. Das Standardformat ist ``%%date(%Y%m%d)``, welche YYYYMMDD ergibt.

: **""%%outfile""**
Fügt den Pfad der Ausgabedatei ein. Das Standardformat ist ``%%outfile(%f)``. Nützlich für self mentioning wie "Dieses ist die %%outfile Datei".

: **""%%toc""**
Bestimmt wo das Inhaltsverzeichnis gesetzt wird. Kann ebenso mehrmals benutzt werden. Dafür muß ebenfalls die ``--toc`` Option benutzt werden.
:

= BEISPIELE =[beispiele]

: ``txt2tags -t html Datei.t2t``

Konvertiert nach HTML, speichert in file.html.

: ``txt2tags -t html -o - Datei.t2t``

Konvertiert nach HTML, sendet Ergebnisse nach STDOUT.

: ``txt2tags -t html --toc Datei.t2t``

Konvertiert nach HTML, fügt automatisch ein Inhaltsverzeichnis ein.

: ``txt2tags -t html --toc --toc-level 2 -n Datei.t2t``

Konvertiert nach HTML, mit einem Inhaltsverzeichnis mit zwei Ebenen und nummerierten Titeln.

: ``txt2tags --toc-only Datei.t2t``

Zeigt nur das Inhaltsverzeichnis, ohne Konvertierung.

: ``txt2tags -t html --css-sugar --style base.css --style ui.css Datei.t2t``

Konvertiert nach HTML, bereitet den sich ergebenden Code vor für CSS, und fügt Aufrufe von zwei externen CSS Dateien ein.

: ``txt2tags -t art --slides --width 80 --height 25 -o - Datei.t2t | more``

Erzeugt Präsentationsfolien in ASCII-Kunst, um auf einem 80x25 Bildschirm gezeigt zu werden.

: ``(echo ; echo "**bold**") | txt2tags -t html -H -``

Handlicher Einzeiler für schnelle Tests mit STDIN.

: ``txt2tags -t html -o - Datei.t2t | tidy > Datei.html``

Sendet Ergebnisse an STDOUT, dann verfeinere den Code mit einem externen Programm vor dem Speichern der Ausgabedatei.
:

= DATEIEN =[dateien]

: ~/.txt2tagsrc
Konfigurationsdatei vom Standardbenutzer.
:

= UMGEBUNG =[umgebung]

: T2TCONFIG
Wenn nicht Null, wird der volle Pfadnamen für die Standardkonfigurationsdatei gesetzt.
:

= AUTOR =[autor]

Aurelio Jargas <verde@aurelio.net>

%% TRANSLATOR: Activate the following line and add your language, name and email/site.

% Man page translated to LANGUAGE by YOUR NAME <YOUR EMAIL OR WEBSITE>.
Manpage ins Deutsche übersetzt von Michael Malien, michael.malien@gmx.de.


= BUGS =[bugs]

http://bugs.txt2tags.org

= COPYRIGHT =[copyright]

Copyright (C) 2001-%%date(%Y) Aurelio Jargas, GNU GPL v2

