Bücher schreiben mit Txt2tags

Aurelio Jargas

%!target : xhtml
%!encoding: iso-8859-15
%!style  : ../English/writing-book.css
%!options: -n --toc --css-sugar --css-inside -o writing-book-de.html

%!preproc: URL_RE_BOOK  http://guia-er.sourceforge.net/
%!preproc: URL_HTMLDOC	http://www.easysw.com/htmldoc/
%!postproc: URL_PC_BOOK http://www.picocontainer.org/Contructor+Dependency+Injection+...+Book+Announcement

	Dieses Dokument gibt eine knappe Anleitung, die die Vorteile
	zeigt, zum Schreiben von Büchern das Werkzeug Txt2tags zu
	verwenden. Außerdem kann es für andere große Dokumente wie
	Anleitungen, Diplom- und Doktorarbeiten benutzt werden.


= Einleitung=

Ich bin der Txt2tags ``[1]`` Autor, und ich schrieb zwei bereits veröffentlichte Paper, die es verwenden:
ein Buch über reguläre Ausdrücke [Regular Expressions book URL_RE_BOOK] (96 Seiten) und einen
Programmierkurs für die Shell (108 Seiten). Das Schreiben lief sehr rund und hiermit will ich diese Erfahrung teilen.

Für ein Buch ist viel Arbeit zu tun, aber es muß nicht kompliziert sein. Zu schreiben heißt Ideen in
Textstrukturen wie Abschnitte, Absätze und Listen zu organisieren. Txt2tags ist ein Werkzeug,
das diese Aufgabe einfach und leicht macht.

Das Schreiben allein oder in einem Team, mit oder ohne Versionskontrolle, technischem
Inhalt oder nicht, nur Text oder mit Bildern. Jedenfalls
kann Txt2tags als das Hauptwerkzeug für die Buchentwicklung verwendet werden.

Es gibt [ein Buch URL_PC_BOOK], das in diesem Augenblick geschrieben wird und Txt2tags verwendet.

	``[1]`` Txt2tags liest eine Textdatei mit minimalem Markup,
	wie ""**fett**"" und ""//kursiv//"" und wandelt es in Dokumente wie
	für HTML, Latex und Adobe PageMaker um. Mehr Info:
	http://txt2tags.sf.net.



= Visuelle Editoren gegen Markup=

Zwei gebräuchliche Arten ein Buch zu schreiben sind einen visuellen Editor
(//Microsoft Word//, //Adobe Pagemaker//) oder eine Markupsprache
(//Latex//, //docbook//) zu verwenden.

In visuellen Editoren schreiben und formatieren Sie  den Inhalt zur gleichen Zeit.
Diese Verwendungsweise ist für kleine Texte ganz nett, aber für ein 300-Seiten-Buch braucht
die Formatierung Zeit und lenkt den Schriftsteller ab.

In Markupsprachen schreiben Sie Inhalt, zeichnen ihn aus und
ein externes Programm bringt ihn in die Endform. Der
Schriftsteller braucht auf die Formatierung nicht acht zu geben, jedoch
ist der Vorgang des Einfügens ``<tags> </tags>`` und
``\more {tags}`` fehleranfällig und sehr aufdringlich, was den Quelltext schwer lesbar macht.

Txt2tags verwendet auch Markup, aber der große Unterschied ist,
dass sein Markup sehr minimal ist und häufig fast natürlich aussieht, wie das
Verwenden des Bindestrichs für Listenelemente. So kann sich der Schriftsteller allein auf den
Inhalt konzentrieren
und die Quelle bleibt lesbar.



= Die Verwendung von Txt2tags=

Mit Txt2tags können Sie Bücher schreiben, indem Sie nach diesen Schritten vorgehen:

+ Der Autor lernt die sehr einfachen Txt2tags-Markupregeln.

+ Der Autor schreibt den Buchinhalt, ohne Seitenrand, Schriftarten, Farben und Größen zu beachten.

+ Der Autor (oder der Herausgeber) öffnet den Inhalt in einem visuellen Textverarbeitungsprogramm,
  das HTML (oder Latex oder ...) liest und die Buchformatierung fortführt.


Schritt 1 ist gerade in ein paar Minuten geschafft. Schritt 2 wird Monate brauchen; und
Schritt 3 kann Tage oder Wochen dauern.

Das Schreiben von Inhalt besteht darin, wenn Sie mehr Zeit auf das
Buch verwenden wollen,  aus diesem Vorgang eine einfache,
produktive und
angenehme Aufgabe zu machen.

Im Folgenden werden Argumente gezeigt, wie Txt2tags verwendet werden kann,
um das zu erreichen.



= Schnell und effizient=

Zeit ist der Schlüssel zum Erfolg. Mit dem Verwenden von Txt2tags werden Sie eine sehr
hohe Produktivität erfahren, weil Sie Inhalt schreiben, ohne gleich zu formatieren.

- **Schnelle Anfangsausgabe**

Es ist sehr schwierig, etwas zu beginnen, aber Txt2tags hat eine
nette Annäherung an dieses Problem. Sitzen Sie gerade und
schreiben Sie Klartext. Wenn Sie das getan haben, können Sie das
Txt2tags-Markup in ein paar Minuten einfügen, und das Dokument ist
bereit umgewandelt und veröffentlicht zu werden.

- **Schnelle Schnappschuß-Vorschau**

Ganz gleich, in welchem Zielformat das Buch sein wird, ist HTML das
bevorzugte Format zum Zeitpunkt des Schreibens. Ein Schnappschuß des
gegenwärtigen Buchzustands kann jederzeit erfolgen, die Quellen
werden in eine HTML-Seite umgewandelt, um sie auf jedem System
mit Hilfe eines Browsers zu lesen. Wenn Sie eine druckfähige
Version brauchen, können Sie mit dem ausgezeichneten Werkzeug [htmldoc URL_HTMLDOC] das HTML zu PDF umwandeln.

- **Buch Inhaltsübersicht**

  Um eine globale Übersicht des Buchinhalts jederzeit schnell zu haben,
  verwenden Sie einfach //TOC Only//. Das Programm zeigt die
  gegenwärtige Inhaltsübersicht für das Buch, mit der Auflistung von
  Kapiteln und Abschnitten, ab jeder Tiefe nummeriert oder nicht.

- **Schnelles Schreiben**

Txt2tags-Markup ist einfach und minimal, sehr leicht zu lernen. Keine
Namen, keine Optionen, keine Parameter. Sie müssen nicht
aufhören, Inhalt zu schreiben, um Markup einzufügen, es
fließt zusammen mit dem Text. Wenn Sie sich an spezifische
Auszeichnungen im Moment nicht erinnern, schreiben Sie einfach
weiter. Am Ende rezensieren Sie global den Text und
fügen schnell das fehlende Markup ein.

- **Schnelle Konvertierung**

Selbst wenn Sie ein 500-Seiten-Buch haben, dauert der
Umwandlungsprozeß gerade einen Moment. Es ist, weil Txt2tags wie ein
Filter wirkt, von einem Format ins andere umwandelt, es
weder indexiert,
kompiliert, berechnet, komprimiert und zeichnet, noch findet eine
starke Verarbeitung der Quellen statt. Keine Bibliothek-, Katalog-,
Schema- und DTD-Albträume mehr.




= Quellen in Ordnern organisieren=

Txt2tags hat einen eingebauten Befehl externe Dateien in jeden Teil
eines Dokumentes während der Umwandlung einzuschließen. Das ermöglicht es,
Quellen in mehrere Dateien zu spalten.

- **Jedes Kapitel in einem Ordner**

Sie können ein Verzeichnis für jedes Kapitel anlegen, die
Quellen in einem strukturierten Baum ablegen. Innerhalb der
Kapitel-Ordner können Sie sogar Unterordner schaffen, um Bilder,
Konfiguration und einzufügende Dateien bereit zu halten.

- **Keine Dateikonflikte**

In Kapitel getrennt, können verschiedene Teams in verschiedenen Kapiteln
  ohne gegenseitige Einflußnahme arbeiten. Jedes Team arbeitet in seinem eigenen Verzeichnis,
  wobei Dateikollisionen aufgrund gleichzeitiger Änderungen vermieden werden.

- **Flexible Zugriffskontrolle**

  Liegen Dateien und Verzeichnisse organisiert vor, können Sie  Zugriffskontrollregeln einführen,
  Eigenschaften und Zugriffsregeln für jede Datei oder Kapitel aufstellen.
  Verwenden Sie die Standard-Systemwerkzeuge, um die Lese-/Schreib-Zugriffe,
  wie die Benutzer- und Gruppen- Schemen zu konfigurieren.

- **Globale Ansicht der Quellen**

Bei strukturierten Quellen hilft ein Dateimanager, eine globale Ansicht vom
  Buch zu haben, den Anteil des Textes und
  der Bilder am Kapitel schnell zu wissen. (Hinweis: unter UNIX die ``tree`` und ``du``-Befehle)

- **Arbeiten Sie am Kapitel, vergessen Sie die anderen**

Werden Quellen in Dateien getrennt, können Sie ein Kapitel
allein umwandeln, ohne darauf zu warten bis das ganze Buch konvertiert
ist. Neben dem schnelleren Umwandeln kann das Kapitel allein
Rezensenten zugesandt oder als eine Probe des ganzen Buches
veröffentlicht werden.

- **Sie trennen, Txt2tags verbindet**

Bei der Umwandlung wird Txt2tags alle Kapitel automatisch zum Buch
zusammenfügen, egal wie tief oder groß der Verzeichnis-Baum
ist.



= Versionskontrolle einfach =

Txt2tags hilft der Versionskontrolle mit zeilenbasierten Werkzeugen (wie CVS und Subversion). Die Quellen sind Klartext, nicht kompilierte
Daten.

- **Arbeiten mit kurzen Zeilen**

Sie können kurze Zeilen setzen, die an 72 Spalten umbrechen. Es
wird der Versionskontrolle helfen, weil es zeilenbasiert arbeitet.
Wenn es das Zielformat verlangt, dass ein Absatz aus einer einzelnen
langen Zeile (wie bei PageMaker) zusammengesetzt wird, verbindet Txt2tags diese automatisch.

- **Lesbare Quellen**

Durch die minimale Auszeichnung sind die Quellen lesbar. Man kann
leicht sehen, was sich von einer Version zur anderen geändert hat,
Markup verbirgt nicht den Text und  verunstaltet ihn nicht.

- **Viel Text, kleine Quellen**

Als Klartext können Sie eine riesige Menge von Text erzeugen und
dabei einen geringen Speicherplatzgebrauch haben. Leute können
volle Checkouts tun und das sogar bei langsamen Verbindungen.

- **Kapitel versioning**

Wie vorher gesehen, können Sie die Quellen in Verzeichnissen
organisieren. Das ergibt Versionskontrolle getrennt nach den Kapiteln,
oder sogar Abschnitten von Kapiteln, je nachdem wie stark granuliert
Sie es brauchen.



= Qualität zählt=

Sie können ein Buch schreiben. Oder Sie können DAS Buch schreiben. Txt2tags hat nette,
eingebaute Eigenschaften, um Ihre Qualität zu steigern.

- **Rechtschreibprüfung**

Weil alle Txt2tags-Zeichen Symbole und nicht Wörter sind,
können Sie jeden Rechtschreibprüfer fur die Texte verwenden.
Er wird sich nur um den Text kümmern, und nicht versuchen
Auszeichnungen zu korrigieren.

- **Alias Datenbank**

  Txt2tags bietet //Filter zur Vorverarbeitung//, womit Sie Schlüsselwort/Wert-Paare definieren können. Wo auch immer das Schlüsselwort in den
Quellen gefunden wird,
  wird es während der Konvertierung zum gegebenen Wert erweitert. Verwenden Sie zum Beispiel die Zeichenkette ``URL_GOOGLE`` in Ihrem Text, wird sie als
  ``http://www.google.com`` in dem Buch erscheinen. Wenn die Google-URL
sich ändert, ändern Sie einfach die
Filterdefinition und alle Vorkommen werden mit aktualisiert. Sie
können unbegrenzt viele Schlüsselwörter verwenden.

- **Dynamischer Inhalt**

  Txt2tags hat auch einen Befehl, vorformatierten Text ins
  Dokument einzuschließen während konvertiert wird, zum Beispiel einen Programm-Quelltext.
  Auf diese Weise können Sie diesen Code getrennt vom
  Buchtext halten und ihn mit der Hand oder sogar automatisch aktualisieren. Eine nette Idee
  ist, den Quellcode mit speziellen Anmerkungen zu kennzeichnen und ein
  kleines Programm zu verwenden, das die gekennzeichneten Teile herauszieht in getrennte Dateien.

- **Kontrolle über das Ergebnis**

  Txt2tags bietet //Filter zur Nach-Verarbeitung//, womit Sie Regeln
definieren können, um das resultierende Dokument anpassen zu
können. Wird die Standard-Konvertierung durch Txt2tags Ihren
Bedürfnissen nicht völlig gerecht, können Sie sie mit
Ihren eigenen Filtern verbessern. Sie können die Macht der regulären Ausdrücke verwenden, um Muster zu
vergleichen.



= Andere Vorteile =

Und es gibt noch mehr!

- **Die getrennte Formatierung von Inhalt**

  Wird HTML als Zielformat verwendet, können Sie auch CSS-Dateien benutzen, um mit verschiedenen Layouts zu experimentieren. CSS definiert das Formatieren
für
  HTML-Seiten; dazu gibt es graphische Editoren, um CSS- Dateien zu schaffen.
  Ein Team von Designern kann an den CSS-Dateien arbeiten, während
  die Schriftsteller schreiben. 

- **Fügen Sie komplizierte Strukturen ein**

  Txt2tags hat wirklich Unterstützung für alle allgemein
  in Texten verwendete Strukturen: Listen, Definitionen, Zitate, verbatim und Tabellen. Aber
  wenn einige Teile Ihres Buches eine kompliziertere Struktur verlangen,
  können Sie das //Pass - Thru// verwenden, wo Sie Text einfügen,
  der bereits fertig mit einer HTML-Tabelle ausgezeichnet ist. Mit Txt2tags
  sind Ausnahmen kein Problem!

- **Verwenden Sie irgendeinen Editor**

Für Klartext-Quelldateien
  kann sogar der einfachste Texteditor der Welt verwendet werden, um das Buch zu
schreiben. Als einzige Eigenschaft braucht er nur Text schreiben und speichern zu können. Wenn Sie Editoren mit
  der Txt2tags-Unterstützung verwenden, haben Sie //Syntax-Highligthing//; das hilft
  die Txt2tags-Zeichen besser zu erkennen. Das gibt es für: Vim, Emacs, Kate und Nano.

- **Technische Unterstützung**

  Txt2tags hat verschiedene Kanäle, um technische Unterstützung zu bekommen: zwei Mailinglisten
  (in Englisch und Portugiesisch), einen IRC-Kanal und sogar eine Orkut-
  Gemeinschaft. Und für Buchprojekte können Sie E-Mails
  direkt an den Programm-Autor senden, der Ihre Antwort vorrangig behandeln wird.



= Kein Werkzeug paßt für alles =

Es gibt einige spezielle Fälle, wo Txt2tags kein geeignetes Werkzeug ist,
um Bücher zu schreiben.

- **Sehr komplizierte Bücher**

Bücher, die viele komplizierte Tabellen, Formeln oder spezifische
Strukturen verwenden, brauchen einen graphischen Editor oder eine
umfangreichere Markupsprache, wie Latex. Wenn Ihr Buch in diese
Beschreibung paßt, hilft Txt2tags nicht weiter.

- **Fußnoten**

  Txt2tags unterstützt keine Fußnoten. Wenn Sie welche verwenden wollen,
  können Sie sie später hinzufügen. Planen Sie aber, einen intensiven
  Gebrauch von Fußnoten zu machen, kann Txt2tags Ihnen nicht helfen.

- **Verweise auf Seiten, Tabellen und Bilder**

  Man kann einen visuellen Editor während des Publizierens verwenden,
  um Indizes für Seiten, Tabellen und Bilder einzufügen, überhaupt kein Problem. Aber wenn
Sie
  planen, sich auf sie innerhalb des Textes zu beziehen, wie "//Siehe Tabelle 4.11 auf Seite 35//", kann Txt2tags Ihnen nicht helfen.



-------------------------------------------------

//Das Schreiben von Büchern mit Txt2tags - Okt/2004//
([siehe Quelle %%infile])

Übersetzung von Michael Malien
